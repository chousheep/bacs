abline(h = 1,col = "darkgray", lty = "dotted")
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(33, 20))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
sq <- read.csv('security_questions.csv')
pca_sq <- prcomp(sq, scale. = TRUE)
summary(pca_sq)
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(33, 20))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
evalues_noise <- replicate(100 ,sim_noise_ev(45), 20))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(45), 20))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(45, 20))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
evalues_noise <- replicate(100 ,sim_noise_ev(13, 20))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(13, 20))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
evalues_noise <- replicate(100 ,sim_noise_ev(1, 20))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(1, 20))
evalues_mean <- apply(evalues_noise,1,mean)
evalues_noise <- replicate(100 ,sim_noise_ev(2, 20))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(2, 20))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
sim_noise_ev(18, 20)
evalues_noise <- replicate(100 ,sim_noise_ev(18, 20))
evalues_noise <- replicate(100 ,sim_noise_ev(18, 18))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(18, 18))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
data.frame(replicate(2, rnorm(5)))
data.frame(replicate(3, rnorm(5)))
data.frame(replicate(18, rnorm(5)))
evalues_noise <- replicate(100 ,sim_noise_ev(18, 406))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(18, 406))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(30, 30)
evalues_mean <- apply(evalues_noise,1,mean)
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(50, 50)
evalues_mean <- apply(evalues_noise,1,mean)
evalues_noise <- replicate(100 ,sim_noise_ev(50, 50))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(50, 50))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
evalues_noise <- replicate(100 ,sim_noise_ev(18, 406))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(18, 406))
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
evalues_mean <- apply(evalues_noise,1,mean)
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
sq <- read.csv('security_questions.csv')
pca_sq <- prcomp(sq, scale. = TRUE)
summary(pca_sq)
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2)
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: security questions vs noise")
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("Actual Data", "Random Noise", "Eigenvalue = 1"),
col=c("black", "blue", "red"), lty=c(1, 2, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("Actual Data", "Random Noise", "Eigenvalue = 1"),
col=c("black", "blue", "red"), lty=c(1, 2, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b")
abline(h = 1,col = "gray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "Eigenvalue = 1"),
col=c("cornflowerblue", "black", "gray"), lty=c(1, 2, 2))
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "black", "gray"), lty=c(1, 2, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b")
abline(h = 1,col = "gray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "black", "gray"), lty=c(1, 2, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "black", "darkgray"), lty=c(1, 2, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b",col = "gray")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "gray", "darkgray"), lty=c(1, 2, 2))
lines(evalues_mean, type = "b",col = "darkgreen")
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b",col = "darkgreen")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "darkgreen", "darkgray"), lty=c(1, 2, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b",col = "darkgreen")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "darkgreen", "darkgray"), lty=c(1, 1, 2))
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "darkgreen", "darkgray"), lty=c("b", 1, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b",col = "darkgreen")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "darkgreen", "darkgray"), lty=c("b", 1, 2))
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b",col = "darkgreen")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "darkgreen", "darkgray"), lty=c(1, 1, 2))
install.packages("psych")
library(psych)
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = "TRUE")
library(psych)
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = "TRUE")
library(psych)
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = TRUE)
sq_principal
library(psych)
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = TRUE)
sq_principal$values
sq_principal$loadings
library(psych)
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = TRUE)
sq_principal
library(psych)
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = TRUE)
sq_principal$loadings
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal$loadings
sq_principal
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal$loadings
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = TRUE)
library(psych)
sq_principal <- principal(sq, nfactor = 10, rotate= "none", scores = TRUE)
sq_principal
sq_principal <- principal(sq, nfactor = 5, rotate= "none", scores = TRUE)
library(psych)
sq_principal <- principal(sq, nfactor = 5, rotate= "none", scores = TRUE)
sq_principal
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal$values
sq_principal$loadings
sq_principal$communality
sq_principal$uniquenesses
sq_principal$loadings
sq <- read.csv('security_questions.csv')
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
summary(sq_principal)
sq <- read.csv('security_questions.csv')
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal$loadings
sq_pca_rot <- principal(sq, nfactor = 3, rotate = "varimax", scores = TRUE)
sq <- read.csv('security_questions.csv')
pca_sq <- prcomp(sq, scale. = TRUE)
summary(pca_sq)
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b",col = "darkgreen")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "darkgreen", "darkgray"), lty=c(1, 1, 2))
sq <- read.csv('security_questions.csv')
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal$loadings
sq_principal$communality
sq_principal$uniquenesses
sq_principal$loadings
sq_pca_rot <- principal(sq, nfactor = 3, rotate = "varimax", scores = TRUE)
sq_pca_rot
sq_pca_rot <- principal(sq, nfactor = 3, rotate = "varimax", scores = TRUE)
summary(sq_pca_rot)
sq_pca_rot <- principal(sq, nfactor = 3, rotate = "varimax", scores = TRUE)
sq_pca_rot
sq_pca_rot$loadings
sq_pca_rot$loadings
sq <- read.csv('security_questions.csv')
pca_sq <- prcomp(sq, scale. = TRUE)
summary(pca_sq)
sim_noise_ev <- function(n,p){
noise <- data.frame(replicate(p, rnorm(n)))
eigen(cor(noise))$values
}
evalues_noise <- replicate(100 ,sim_noise_ev(406,18))
evalues_mean <- apply(evalues_noise,1,mean)
# Plotting
screeplot(pca_sq, col= "cornflowerblue", type = "lines", lwd = 2, main = "Eigenvalues: original data vs noise")
lines(evalues_mean, type = "b",col = "darkgreen")
abline(h = 1,col = "darkgray", lty = "dotted")
legend("topright", legend=c("original data", "noise", "eigenvalue = 1"),
col=c("cornflowerblue", "darkgreen", "darkgray"), lty=c(1, 1, 2))
sq <- read.csv('security_questions.csv')
library(psych)
sq_principal <- principal(sq, nfactor = 3, rotate= "none", scores = TRUE)
sq_principal$loadings
sq_principal$communality
sq_principal$uniquenesses
sq_principal$loadings
sq_pca_rot <- principal(sq, nfactor = 3, rotate = "varimax", scores = TRUE)
sq_pca_rot
sq_pca_rot$loadings
sq_pca_rot <- principal(sq, nfactor = 2, rotate = "varimax", scores = TRUE)
sq_pca_rot
sq_pca_rot <- principal(sq, nfactor = 2, rotate = "varimax", scores = TRUE)
sq_pca_rot$loadings
