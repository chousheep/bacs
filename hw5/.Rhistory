permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# observed difference
observed_diff <- mean(hosts$CLEC) - mean(hosts$ILEC)
# Getting the function ready for permutation
permute_diff <- function(values, groups){
permuted <- sample(values, replace = FALSE)
grouped <- split(permuted, groups)
permute_diff <- mean(grouped$CLEC) - mean(grouped$ILEC)
}
# Visualize after 1000 permutations
nperms = 1000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123")
norm_qq_plot(d123)
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123")
norm_qq_plot(d123)
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123")
norm_qq_plot(d123)
# Setting seed
set.seed(123123)
# Observed difference
observed_diff <- mean(hosts$CLEC) - mean(hosts$ILEC)
# Getting the function ready for permutation
permute_diff <- function(values, groups){
permuted <- sample(values, replace = FALSE)
grouped <- split(permuted, groups)
permute_diff <- mean(grouped$CLEC) - mean(grouped$ILEC)
}
# Visualize after 1000 permutations
nperms = 1000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
hist(permuted_diffs, breaks = "fd", probability = TRUE, main = "Null Distribution of diffs")
lines(density(permuted_diffs))
# Reading in the file
response_wide <- read.csv("verizon_wide.csv")
View(response_wide)
# Reshaping the response_wide sample into response_long
library(tidyr)
response_long <- gather(response_wide, na.rm = TRUE, key = "host", value = "response_time")
head(response_long)
tail(response_long)
hosts <- split(x = response_long$response_time, f = response_long$host)
plot(density(hosts$ILEC), col = "cornflowerblue", lwd = 2, xlim= c(0,300), main = "Response Times of ILEC and CLEC")
lines(density(hosts$CLEC), col = "coral3", lwd = 2)
legend("topright", lty = 1, c("ILEC","CLEC"), col = c("cornflowerblue","coral3"))
t.test(response_wide$CLEC, response_wide$ILEC, alt="greater", var.equal = TRUE, conf.level = 0.99)
t.test(response_wide$CLEC, response_wide$ILEC, alt="greater", var.equal = FALSE, conf.level = 0.99)
# Setting seed
set.seed(123123)
# Observed difference
observed_diff <- mean(hosts$CLEC) - mean(hosts$ILEC)
# Getting the function ready for permutation
permute_diff <- function(values, groups){
permuted <- sample(values, replace = FALSE)
grouped <- split(permuted, groups)
permute_diff <- mean(grouped$CLEC) - mean(grouped$ILEC)
}
# Visualize after 1000 permutations
nperms = 1000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
hist(permuted_diffs, breaks = "fd", probability = TRUE, main = "Null Distribution of diffs")
lines(density(permuted_diffs))
# one-tailed p-value
p_1tailed <- sum(permuted_diffs > observed_diff)/ nperms
p_1tailed
# two-tailed p-value
p_2tailed <- sum(abs(permuted_diffs) > observed_diff)/ nperms
p_2tailed
# Define gt_eq() for comparing values from two groups
gt_eq <- function(a,b){
ifelse(a > b, 1, 0) + ifelse(a ==b, 0.5, 0)
}
# W statistic
W <- sum(outer(hosts$CLEC , hosts$ILEC, FUN = gt_eq))
W
# Lengths of the CLEC and ILEC groups to be used in the p-value calculation
n1 <- length(hosts$CLEC)
n2 <- length(hosts$ILEC)
wilcox_p_1tail<- 1 - pwilcox(W,n1,n2)
wilcox_p_2tail <- 2 * wilcox_p_1tail
wilcox_p_1tail
wilcox.test(hosts$CLEC, hosts$ILEC, alternative = "greater")
norm_qq_plot <- function(values) {
# (i) Create a sequence of probability numbers from 0 to 1, with ~1000 probabilities in between
probs1000 <- seq(0, 1, 0.001)
# (ii) Calculate ~1000 quantiles of our values
q_vals <- quantile(values, probs = probs1000)
# (iii) Calculate ~1000 quantiles of a perfectly normal distribution with the same mean and standard deviation as our values
q_norm <- qnorm(p = probs1000, mean = mean(values), sd = sd(values))
# (iv) Create a scatterplot comparing the quantiles of a normal distribution versus quantiles of values
plot(q_norm, q_vals, xlab="normal quantiles", ylab="values quantiles")
# (v) Draw a red line with intercept of 0 and slope of 1, comparing these two sets of quantiles
abline(a = 0, b = 1, col="red", lwd=2) # a:intercept, b:slope
}
set.seed1(23123)
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123")
norm_qq_plot(d123)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "ILEC")
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "CLEC")
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "ILEC")
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "CLEC")
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for permutations in Question 2
nperms = 1000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
norm_qq_plot <- function(values) {
# (i) Create a sequence of probability numbers from 0 to 1, with ~1000 probabilities in between
probs1000 <- seq(0, 1, 0.001)
# (ii) Calculate ~1000 quantiles of our values
q_vals <- quantile(values, probs = probs1000)
# (iii) Calculate ~1000 quantiles of a perfectly normal distribution with the same mean and standard deviation as our values
q_norm <- qnorm(p = probs1000, mean = mean(values), sd = sd(values))
# (iv) Create a scatterplot comparing the quantiles of a normal distribution versus quantiles of values
plot(q_norm, q_vals, xlab="normal quantiles", ylab="values quantiles",lwd = 2, col="cornflowerblue")
# (v) Draw a red line with intercept of 0 and slope of 1, comparing these two sets of quantiles
abline(a = 0, b = 1, col="red", lwd=2) # a:intercept, b:slope
}
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123")
norm_qq_plot(d123)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "ILEC", col = "cornflowerblue", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "ILEC")
norm_qq_plot(response_wide$ILEC)
norm_qq_plot <- function(values) {
# (i) Create a sequence of probability numbers from 0 to 1, with ~1000 probabilities in between
probs1000 <- seq(0, 1, 0.001)
# (ii) Calculate ~1000 quantiles of our values
q_vals <- quantile(values, probs = probs1000)
# (iii) Calculate ~1000 quantiles of a perfectly normal distribution with the same mean and standard deviation as our values
q_norm <- qnorm(p = probs1000, mean = mean(values), sd = sd(values))
# (iv) Create a scatterplot comparing the quantiles of a normal distribution versus quantiles of values
plot(q_norm, q_vals, xlab="normal quantiles", ylab="values quantiles")
# (v) Draw a red line with intercept of 0 and slope of 1, comparing these two sets of quantiles
abline(a = 0, b = 1, col="red", lwd=2) # a:intercept, b:slope
}
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123", col = "cornflowerblue", lwd = 2)
norm_qq_plot(d123)
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123", lwd = 2)
norm_qq_plot(d123)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for permutations in Question 2
nperms = 1000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# QQ-plotting for permutations in Question 2
nperms = 10000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# QQ-plotting for permutations in Question 2
nperms = 10000000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# QQ-plotting for permutations in Question 2
nperms = 1000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# QQ-plotting for permutations in Question 2
nperms = 2000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# QQ-plotting for permutations in Question 2
nperms = 4000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# Reading in the file
response_wide <- read.csv("verizon_wide.csv")
View(response_wide)
# Reshaping the response_wide sample into response_long
library(tidyr)
response_long <- gather(response_wide, na.rm = TRUE, key = "host", value = "response_time")
head(response_long)
tail(response_long)
hosts <- split(x = response_long$response_time, f = response_long$host)
plot(density(hosts$ILEC), col = "cornflowerblue", lwd = 2, xlim= c(0,300), main = "Response Times of ILEC and CLEC")
lines(density(hosts$CLEC), col = "coral3", lwd = 2)
legend("topright", lty = 1, c("ILEC","CLEC"), col = c("cornflowerblue","coral3"))
t.test(response_wide$CLEC, response_wide$ILEC, alt="greater", var.equal = TRUE, conf.level = 0.99)
t.test(response_wide$CLEC, response_wide$ILEC, alt="greater", var.equal = FALSE, conf.level = 0.99)
# Setting seed
set.seed(123123)
# Observed difference
observed_diff <- mean(hosts$CLEC) - mean(hosts$ILEC)
# Getting the function ready for permutation
permute_diff <- function(values, groups){
permuted <- sample(values, replace = FALSE)
grouped <- split(permuted, groups)
permute_diff <- mean(grouped$CLEC) - mean(grouped$ILEC)
}
# Visualize after 10000 permutations
nperms = 10000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
hist(permuted_diffs, breaks = "fd", probability = TRUE, main = "Null Distribution of diffs")
lines(density(permuted_diffs))
# one-tailed p-value
p_1tailed <- sum(permuted_diffs > observed_diff)/ nperms
p_1tailed
# two-tailed p-value
p_2tailed <- sum(abs(permuted_diffs) > observed_diff)/ nperms
p_2tailed
# Define gt_eq() for comparing values from two groups
gt_eq <- function(a,b){
ifelse(a > b, 1, 0) + ifelse(a ==b, 0.5, 0)
}
# W statistic
W <- sum(outer(hosts$CLEC , hosts$ILEC, FUN = gt_eq))
W
# Lengths of the CLEC and ILEC groups to be used in the p-value calculation
n1 <- length(hosts$CLEC)
n2 <- length(hosts$ILEC)
wilcox_p_1tail<- 1 - pwilcox(W,n1,n2)
wilcox_p_2tail <- 2 * wilcox_p_1tail
wilcox_p_1tail
wilcox.test(hosts$CLEC, hosts$ILEC, alternative = "greater")
norm_qq_plot <- function(values) {
# (i) Create a sequence of probability numbers from 0 to 1, with ~1000 probabilities in between
probs1000 <- seq(0, 1, 0.001)
# (ii) Calculate ~1000 quantiles of our values
q_vals <- quantile(values, probs = probs1000)
# (iii) Calculate ~1000 quantiles of a perfectly normal distribution with the same mean and standard deviation as our values
q_norm <- qnorm(p = probs1000, mean = mean(values), sd = sd(values))
# (iv) Create a scatterplot comparing the quantiles of a normal distribution versus quantiles of values
plot(q_norm, q_vals, xlab="normal quantiles", ylab="values quantiles")
# (v) Draw a red line with intercept of 0 and slope of 1, comparing these two sets of quantiles
abline(a = 0, b = 1, col="red", lwd=2) # a:intercept, b:slope
}
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123", lwd = 2)
norm_qq_plot(d123)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for permutations in Question 2
nperms = 4000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
par(mfrow = c(1,2))
plot(density(permuted_diffs), main = "permuted_diffs")
norm_qq_plot(permuted_diffs)
# Setting seed
set.seed(123123)
# Observed difference
observed_diff <- mean(hosts$CLEC) - mean(hosts$ILEC)
# Getting the function ready for permutation
permute_diff <- function(values, groups){
permuted <- sample(values, replace = FALSE)
grouped <- split(permuted, groups)
permute_diff <- mean(grouped$CLEC) - mean(grouped$ILEC)
}
# Visualize after 10000 permutations
nperms = 10000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
hist(permuted_diffs, breaks = "fd", probability = TRUE, main = "Null Distribution of diffs")
lines(density(permuted_diffs))
# Displaying observed difference
abline(v = observed_diff)
# Setting seed
set.seed(123123)
# Observed difference
observed_diff <- mean(hosts$CLEC) - mean(hosts$ILEC)
# Getting the function ready for permutation
permute_diff <- function(values, groups){
permuted <- sample(values, replace = FALSE)
grouped <- split(permuted, groups)
permute_diff <- mean(grouped$CLEC) - mean(grouped$ILEC)
}
# Visualize after 10000 permutations
nperms = 10000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
hist(permuted_diffs, breaks = "fd", probability = TRUE, main = "Null Distribution of diffs")
lines(density(permuted_diffs))
# Displaying observed difference
abline(v = observed_diff)
# one-tailed p-value
p_1tailed <- sum(permuted_diffs > observed_diff)/ nperms
p_1tailed
# two-tailed p-value
p_2tailed <- sum(abs(permuted_diffs) > observed_diff)/ nperms
p_2tailed
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "QQ plot of CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "QQ plot of ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for CLEC
par(mfrow = c(2,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "QQ plot of CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
plot(density(response_wide$ILEC), main = "QQ plot of ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "QQ plot of CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "QQ plot of ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# Reading in the file
response_wide <- read.csv("verizon_wide.csv")
View(response_wide)
# Reshaping the response_wide sample into response_long
library(tidyr)
response_long <- gather(response_wide, na.rm = TRUE, key = "host", value = "response_time")
head(response_long)
tail(response_long)
hosts <- split(x = response_long$response_time, f = response_long$host)
plot(density(hosts$ILEC), col = "cornflowerblue", lwd = 2, xlim= c(0,300), main = "Response Times of ILEC and CLEC")
lines(density(hosts$CLEC), col = "coral3", lwd = 2)
legend("topright", lty = 1, c("ILEC","CLEC"), col = c("cornflowerblue","coral3"))
t.test(response_wide$CLEC, response_wide$ILEC, alt="greater", var.equal = TRUE, conf.level = 0.99)
t.test(response_wide$CLEC, response_wide$ILEC, alt="greater", var.equal = FALSE, conf.level = 0.99)
# Setting seed
set.seed(123123)
# Observed difference
observed_diff <- mean(hosts$CLEC) - mean(hosts$ILEC)
# Getting the function ready for permutation
permute_diff <- function(values, groups){
permuted <- sample(values, replace = FALSE)
grouped <- split(permuted, groups)
permute_diff <- mean(grouped$CLEC) - mean(grouped$ILEC)
}
# Visualize after 10000 permutations
nperms = 10000
permuted_diffs <- replicate(nperms, permute_diff(response_long$response_time, response_long$host))
hist(permuted_diffs, breaks = "fd", probability = TRUE, main = "Null Distribution of diffs")
lines(density(permuted_diffs))
# Displaying observed difference
abline(v = observed_diff)
# one-tailed p-value
p_1tailed <- sum(permuted_diffs > observed_diff)/ nperms
p_1tailed
# two-tailed p-value
p_2tailed <- sum(abs(permuted_diffs) > observed_diff)/ nperms
p_2tailed
# Define gt_eq() for comparing values from two groups
gt_eq <- function(a,b){
ifelse(a > b, 1, 0) + ifelse(a ==b, 0.5, 0)
}
# W statistic
W <- sum(outer(hosts$CLEC , hosts$ILEC, FUN = gt_eq))
W
# Lengths of the CLEC and ILEC groups to be used in the p-value calculation
n1 <- length(hosts$CLEC)
n2 <- length(hosts$ILEC)
wilcox_p_1tail<- 1 - pwilcox(W,n1,n2)
wilcox_p_2tail <- 2 * wilcox_p_1tail
wilcox_p_1tail
wilcox.test(hosts$CLEC, hosts$ILEC, alternative = "greater")
norm_qq_plot <- function(values) {
# (i) Create a sequence of probability numbers from 0 to 1, with ~1000 probabilities in between
probs1000 <- seq(0, 1, 0.001)
# (ii) Calculate ~1000 quantiles of our values
q_vals <- quantile(values, probs = probs1000)
# (iii) Calculate ~1000 quantiles of a perfectly normal distribution with the same mean and standard deviation as our values
q_norm <- qnorm(p = probs1000, mean = mean(values), sd = sd(values))
# (iv) Create a scatterplot comparing the quantiles of a normal distribution versus quantiles of values
plot(q_norm, q_vals, xlab="normal quantiles", ylab="values quantiles")
# (v) Draw a red line with intercept of 0 and slope of 1, comparing these two sets of quantiles
abline(a = 0, b = 1, col="red", lwd=2) # a:intercept, b:slope
}
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "d123", lwd = 2)
norm_qq_plot(d123)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "QQ plot of CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for ILEC
par(mfrow = c(1,2))
plot(density(response_wide$ILEC), main = "QQ plot of ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
plot(density(d123), main = "d123", lwd = 2)
norm_qq_plot(d123)
# QQ-plotting for CLEC
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "QQ plot of CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
# QQ-plotting for ILEC
plot(density(response_wide$ILEC), main = "QQ plot of ILEC", lwd = 2)
norm_qq_plot(response_wide$ILEC)
# QQ-plotting for CLEC
par(mfrow = c(1,2))
response_wide <- response_wide[!is.na(response_wide$CLEC), ]
plot(density(response_wide$CLEC), main = "QQ plot of CLEC", lwd = 2)
norm_qq_plot(response_wide$CLEC)
set.seed(123123)
d1 <- rnorm(n=500, mean=15, sd=5)
d2 <- rnorm(n=200, mean=30, sd=5)
d3 <- rnorm(n=100, mean=45, sd=5)
d123 <- c(d1, d2, d3)
par(mfrow = c(1,2))
plot(density(d123), main = "QQ plot of d123", lwd = 2)
norm_qq_plot(d123)
